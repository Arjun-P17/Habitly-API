scalar UUID
scalar Long
scalar Instant


type Query {
    workoutHistory(input: PageInfoInput): WorkoutHistoryResponse
    workoutEvent(id: UUID): WorkoutEvent
    workouts(input: PageInfoInput): WorkoutsResponse
    workout(id: UUID): Workout
    workoutExercises(input: PageInfoInput): WorkoutExercisesResponse
    workoutExercise(id: UUID): WorkoutExercise
    exercises(input: PageInfoInput): ExercisesResponse
    exercise(id: UUID): Exercise
}

type Mutation {
    upsertWorkoutEvent(input: WorkoutEventInput): WorkoutEvent
    removeWorkoutEvent(workoutEventId: String!): Boolean

    upsertWorkout(input: WorkoutInput): Workout
    removeWorkout(workoutId: String!): Boolean

    upsertWorkoutExercise(input: WorkoutExerciseInput): WorkoutExercise
    removeWorkoutExercise(workoutExerciseId: String!): Boolean

    upsertExercise(input: ExerciseInput): Exercise
    removeExercise(exerciseId: String!): Boolean
}

type WorkoutEvent {
    id: UUID!
    start: Instant!
    duration: Long!
    workout: Workout!
}

type Workout {
    id: UUID!
    name: String!
    description: String
    exercises: [WorkoutExercise!]!
}

type WorkoutExercise {
    id: UUID!
    workoutId: UUID!
    exercise: Exercise!
    sets: Int
    reps: Int
    weight: Int
    distance: Int
}

type Exercise {
    id: UUID!
    name: String!
    description: String
    muscleGroup: MuscleGroup!
    type: ExerciseType!
}

enum ExerciseType {
    CARDIO,
    STRENGTH,
    STRETCH,
}

enum MuscleGroup {
    CHEST,
    SHOULDERS,
    TRAPEZIUS,
    DELTOIDS,
    LATS,
    BICEPS,
    TRICEPS,
    FOREARMS,
    HAMSTRINGS,
    QUADRICEPS,
    CALVES,
    GLUTES,
    ABS,
}

input WorkoutEventInput {
    id: UUID
    start: Instant!
    duration: Long!
    workoutId: UUID!
}

input WorkoutInput {
    id: UUID
    name: String!
    description: String
    exercises: [UUID!]
}

input WorkoutExerciseInput {
    id: UUID
    workoutId: UUID!
    exerciseId: UUID!
    sets: Int
    reps: Int
    weight: Int
    distance: Int
}

input ExerciseInput {
    id: UUID
    name: String!
    description: String
    muscleGroup: MuscleGroup!
    type: ExerciseType!
}

input PageInfoInput {
    offset: Int
    pageSize: Int
}

type PageInfo {
    offset: Int
    pageSize: Int
    hasMore: Int
    totalCount: Int
}

type WorkoutHistoryResponse {
    workoutHistory: [WorkoutEvent!]!
}

type WorkoutsResponse {
    workouts: [Workout!]!
}

type WorkoutExercisesResponse {
    workoutExercises: [WorkoutExercise!]!
}

type ExercisesResponse {
    exercises: [Exercise!]!
}
